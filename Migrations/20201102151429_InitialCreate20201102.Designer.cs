// <auto-generated />
using BibleAppEF.Areas.ImportBible.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BibleAppEF.Migrations
{
    [DbContext(typeof(BibleContext))]
    [Migration("20201102151429_InitialCreate20201102")]
    partial class InitialCreate20201102
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BibleAppEF.Areas.ImportBible.Models.Bible", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BibleText")
                        .HasColumnType("text");

                    b.Property<string>("Book")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("BookChapterVerse")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Chapter")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Verse")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Bibles");
                });

            modelBuilder.Entity("BibleAppEF.Areas.ImportBible.Models.Register", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Copyright")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FileType")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Language")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Registers");
                });

            modelBuilder.Entity("BibleAppEF.Areas.ImportBible.Models.UserNotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BookChapterVerse")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UID")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
